apiVersion: v1
kind: Config
clusters:
- cluster:
    certificate-authority-data: {{ (bitwardenFields "item" "k3s.prod").certificate_authority_data.value }}
    server: {{ (bitwardenFields "item" "k3s.prod").server.value }}
  name: prod
contexts:
- context:
    cluster: prod
    {{- /*
      As the default namespace is dynamic, we can look it up when the template
      is executed to get the current value. This prevents chezmoi diff from
      seeing differences between the source and the deployed version of the
      file. See:
      https://www.chezmoi.io/user-guide/manage-different-types-of-file/#manage-part-but-not-all-of-a-file

      An or-condition is used to allow the config to still be deployed with a
      default value, even when the kubectl command fails for whatever reason
      (even if kubectl is not yet installed). To do this, the command must be
      passed in a string to the bash command.
    */}}
    namespace: {{
        output "bash" "-c"
            "kubectl config view --context prod --minify -o go-template='{{ (index .contexts 0).context.namespace }}' || echo default"
        | trim
    }}
    user: prod_user
  name: prod
current-context: {{ output "bash" "-c" "kubectl config current-context || echo prod" | trim }}
preferences: {}
users:
- name: prod_user
  user:
    client-certificate-data: {{ (bitwardenFields "item" "k3s.prod").client_certificate_data.value }}
    client-key-data: {{ (bitwardenFields "item" "k3s.prod").client_key_data.value }}

